{
  "entities": {
    "StudentProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StudentProfile",
      "type": "object",
      "description": "Represents a student's profile, including academic, skill, interest, and behavioral data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the StudentProfile entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User entity. (Relationship: User 1:1 StudentProfile)"
        },
        "academicPerformance": {
          "type": "string",
          "description": "Details of the student's academic performance, including grades, GPA, and coursework."
        },
        "skills": {
          "type": "array",
          "description": "List of skills possessed by the student.",
          "items": {
            "type": "string"
          }
        },
        "interests": {
          "type": "array",
          "description": "List of interests of the student.",
          "items": {
            "type": "string"
          }
        },
        "behavioralPatterns": {
          "type": "string",
          "description": "Description of the student's behavioral patterns and characteristics."
        },
        "generatedText": {
          "type": "string",
          "description": "Text generated by the AI to fill out profile sections."
        }
      },
      "required": [
        "id",
        "userId"
      ]
    },
    "CareerRecommendation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CareerRecommendation",
      "type": "object",
      "description": "Represents a personalized career recommendation for a student.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CareerRecommendation entity."
        },
        "studentProfileId": {
          "type": "string",
          "description": "Reference to the StudentProfile entity. (Relationship: StudentProfile 1:N CareerRecommendation)"
        },
        "careerPath": {
          "type": "string",
          "description": "Recommended career path for the student."
        },
        "trainingSuggestions": {
          "type": "array",
          "description": "List of suggested training programs for the student.",
          "items": {
            "type": "string"
          }
        },
        "skillImprovementInterventions": {
          "type": "array",
          "description": "List of skill improvement interventions for the student.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "studentProfileId"
      ]
    },
    "Internship": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Internship",
      "type": "object",
      "description": "Represents an internship opportunity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Internship entity."
        },
        "companyId": {
          "type": "string",
          "description": "Reference to the Company entity offering the internship. (Relationship: Company 1:N Internship)"
        },
        "title": {
          "type": "string",
          "description": "Title of the internship."
        },
        "description": {
          "type": "string",
          "description": "Description of the internship responsibilities and requirements."
        },
        "requiredSkills": {
          "type": "array",
          "description": "List of skills required for the internship.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "companyId"
      ]
    },
    "Job": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Job",
      "type": "object",
      "description": "Represents a job opportunity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Job entity."
        },
        "companyId": {
          "type": "string",
          "description": "Reference to the Company entity offering the job. (Relationship: Company 1:N Job)"
        },
        "title": {
          "type": "string",
          "description": "Title of the job."
        },
        "description": {
          "type": "string",
          "description": "Description of the job responsibilities and requirements."
        },
        "requiredSkills": {
          "type": "array",
          "description": "List of skills required for the job.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "companyId"
      ]
    },
    "Company": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Company",
      "type": "object",
      "description": "Represents a company offering internships or jobs.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Company entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the company."
        },
        "description": {
          "type": "string",
          "description": "Description of the company."
        },
        "industry": {
          "type": "string",
          "description": "Industry the company operates in."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Name of the user."
        },
        "language": {
          "type": "string",
          "description": "Preferred language of the user."
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "PlacementCellAnalytics": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PlacementCellAnalytics",
      "type": "object",
      "description": "Represents analytics data for placement cells.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PlacementCellAnalytics entity."
        },
        "universityId": {
          "type": "string",
          "description": "Reference to the University entity. (Relationship: University 1:N PlacementCellAnalytics)"
        },
        "skillGaps": {
          "type": "string",
          "description": "Data on skill gaps identified among students."
        },
        "placementTrends": {
          "type": "string",
          "description": "Data on placement trends."
        },
        "departmentalInsights": {
          "type": "string",
          "description": "Departmental insights related to placements."
        },
        "date": {
          "type": "string",
          "description": "The date that the analytics was taken.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "universityId"
      ]
    },
    "University": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "University",
      "type": "object",
      "description": "Represents a university using the platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the University entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the university."
        },
        "location": {
          "type": "string",
          "description": "Location of the university."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  User ID is used as the document ID. This enables path-based ownership for user-specific data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/studentProfiles/{studentProfileId}",
        "definition": {
          "entityName": "StudentProfile",
          "schema": {
            "$ref": "#/backend/entities/StudentProfile"
          },
          "description": "Stores student profiles, nested under the user. This ensures clear ownership and simplifies security rules. StudentProfileId is the unique id for each student profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "studentProfileId",
              "description": "The unique identifier for the student profile."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/studentProfiles/{studentProfileId}/careerRecommendations/{careerRecommendationId}",
        "definition": {
          "entityName": "CareerRecommendation",
          "schema": {
            "$ref": "#/backend/entities/CareerRecommendation"
          },
          "description": "Stores career recommendations for a student, nested under the student profile. This maintains the relationship and simplifies data access. CareerRecommendationId is the unique id for the recommendation.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "studentProfileId",
              "description": "The unique identifier for the student profile."
            },
            {
              "name": "careerRecommendationId",
              "description": "The unique identifier for the career recommendation."
            }
          ]
        }
      },
      {
        "path": "/companies/{companyId}",
        "definition": {
          "entityName": "Company",
          "schema": {
            "$ref": "#/backend/entities/Company"
          },
          "description": "Stores company profiles. CompanyId is the unique id for each company.",
          "params": [
            {
              "name": "companyId",
              "description": "The unique identifier for the company."
            }
          ]
        }
      },
      {
        "path": "/companies/{companyId}/internships/{internshipId}",
        "definition": {
          "entityName": "Internship",
          "schema": {
            "$ref": "#/backend/entities/Internship"
          },
          "description": "Stores internship opportunities offered by companies. InternshipId is the unique id for each internship.",
          "params": [
            {
              "name": "companyId",
              "description": "The unique identifier for the company."
            },
            {
              "name": "internshipId",
              "description": "The unique identifier for the internship."
            }
          ]
        }
      },
      {
        "path": "/companies/{companyId}/jobs/{jobId}",
        "definition": {
          "entityName": "Job",
          "schema": {
            "$ref": "#/backend/entities/Job"
          },
          "description": "Stores job opportunities offered by companies. JobId is the unique id for each job.",
          "params": [
            {
              "name": "companyId",
              "description": "The unique identifier for the company."
            },
            {
              "name": "jobId",
              "description": "The unique identifier for the job."
            }
          ]
        }
      },
      {
        "path": "/universities/{universityId}",
        "definition": {
          "entityName": "University",
          "schema": {
            "$ref": "#/backend/entities/University"
          },
          "description": "Stores university profiles. UniversityId is the unique id for each university.",
          "params": [
            {
              "name": "universityId",
              "description": "The unique identifier for the university."
            }
          ]
        }
      },
      {
        "path": "/universities/{universityId}/placementCellAnalytics/{placementCellAnalyticsId}",
        "definition": {
          "entityName": "PlacementCellAnalytics",
          "schema": {
            "$ref": "#/backend/entities/PlacementCellAnalytics"
          },
          "description": "Stores placement cell analytics for each university. PlacementCellAnalyticsId is the unique id for the analytics entry.",
          "params": [
            {
              "name": "universityId",
              "description": "The unique identifier for the university."
            },
            {
              "name": "placementCellAnalyticsId",
              "description": "The unique identifier for the placement cell analytics entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure, scalable, and debuggable data model for the Mento platform. It leverages path-based ownership for user-specific data and denormalization to ensure authorization independence. The structure is segregated based on data access needs, ensuring a homogeneous security posture for each collection.  Specifically, StudentProfiles are stored under `/users/{userId}/studentProfiles/{studentProfileId}`, ensuring only the owning user can access them. CareerRecommendations are nested under StudentProfiles at `/users/{userId}/studentProfiles/{studentProfileId}/careerRecommendations/{careerRecommendationId}`. Company data, Internships, and Jobs are stored in top-level collections, allowing for broader discoverability while maintaining clear ownership (companies own Internships and Jobs). PlacementCellAnalytics are linked to Universities using the path `/universities/{universityId}/placementCellAnalytics/{placementCellAnalyticsId}`. This structure enables efficient querying and simplifies security rules by eliminating the need for complex `get()` calls for authorization.  This promotes atomic operations during transactions and batch operations, improving data consistency. The use of explicit path-based ownership and segregation enables straightforward and secure `list` operations, satisfying the QAPs."
  }
}